swagger: "2.0"
info:
  version: "0.0.1"
  title: Movie Manager App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /user/signup:
    # binds a127 app logic to a route
    x-swagger-router-controller: user
    post:
      description: signup for user
      # used as the method name of the controller
      operationId: signup
      parameters:
        - name: user
          description: User info
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GeneralResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/signin:
    # binds a127 app logic to a route
    x-swagger-router-controller: user
    post:
      description: signin for user
      # used as the method name of the controller
      operationId: signin
      parameters:
        - name: user
          description: User info
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SignInResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/users:
    # binds a127 app logic to a route
    x-swagger-router-controller: user
    get:
      description: Get all users (Debug)
      operationId: getAllUsers
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUsersListResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /movie:
    # our controller name
    x-swagger-router-controller: movie
    get:
      description: get the movies list
      operationId: getAll
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetMoviesListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: add a new movie to the list
      operationId: save
      parameters:
        - name: x-access-token
          in: header
          description: token to be passed as a header
          required: true
          type: string
        - name: movie
          description: Movie properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Movie"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse" 
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  GetUsersListResponse:
    required:
      - users
    properties:
      # The array of movies
      users:
        type: array
        items: 
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            email:
              type: string
            password:
              type: string
  User:
    type: object
    properties:
      name:
        type: string
        description: User name
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password
    required:
      - name
      - email
      - password
  Movie:
    type: object
    properties:
      title:
        type: string
        description: task object name
      year:
        type: number
        description: task description
    required:
      - title
      - year
  GetMoviesListResponse:
    required:
      - movies
    properties:
      # The array of movies
      movies:
        type: array
        items: 
          type: object
          properties:
            id:
              type: string
            title:
              type: string
            year:
              type: number
  SignInResponse:
    type: object
    properties:
      success:
        type: boolean
        description: returns true if successful
      description:
        type: string
        description: a short comment 
      token:
        type: string
        description: jwt token
    required:
      - success
      - description
      - token
  GeneralResponse:
    type: object
    properties:
      success:
        type: boolean
        description: returns true if successful
      description:
        type: string
        description: a short comment 
    required:
      - success
      - description
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string